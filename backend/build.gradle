buildscript {
	ext {
		springBootVersion = '2.7.12'
		springDependencyManagement = '1.0.15.RELEASE'
		asciidoctorVersion = '3.3.2'
		springRestDocsVersion = '3.0.0'
		queryDslVersion = '5.0.0'
		snippetsDir = file('build/generated-snippets')
		restDocsDir = file('src/main/resources/static/docs')
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagement"
	id 'org.asciidoctor.jvm.convert' version "$asciidoctorVersion"
}

group = 'group.ict'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	// other spring starter dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// configuration processor
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// database dependencies
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.h2database:h2'

	// spring test starter dependency
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//=== query dsl
	implementation "com.querydsl:querydsl-core:$queryDslVersion"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	//=== spring rest docs
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:$springRestDocsVersion"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

asciidoctor.doFirst {
	println("---------------- delete present asciidoctor.")
	delete restDocsDir
}

asciidoctor.doLast {
	println("---------------- asciidoctor is deleted!")
}

clean {
	delete file('src/main/generated')
}

tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from file(asciidoctor.outputDir)
	into restDocsDir
}

build {
	dependsOn copyDocument
}

bootJar {
	dependsOn asciidoctor
	from file(asciidoctor.outputDir)
	into restDocsDir
}
